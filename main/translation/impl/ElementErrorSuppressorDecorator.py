#*
# * Suppresses any error generated by decorated translator.
# * <p>
# * This can be used to ignore element-level errors so the rest of the batch
# * can be processed.
# * <p>
# * When error is caught, an empty list will be returned effectively making
# * element to be ignored.
# * <p>
# * If you plan to log or somehow report exceptions generated by translators then
# * use this translator first in the chain. Otherwise, other translators will never see an error.
# * <p>
# * C - type of translation context.
# 
#JAVA TO PYTHON CONVERTER TODO TASK: Java annotations have no direct Python equivalent:
#ORIGINAL LINE: @CompileStatic public class ElementErrorSuppressorDecorator<C> extends GroovyObjectSupport implements AroundElement<C>
class ElementErrorSuppressorDecorator(GroovyObjectSupport, AroundElement):
    #    *
    #     * Creates instance.
    #     *
    #     * @param next Translator to be decorated.
    #     
#JAVA TO PYTHON CONVERTER TODO TASK: Java annotations have no direct Python equivalent:
#ORIGINAL LINE: public ElementErrorSuppressorDecorator(@Nonnull AroundElement<C> next)
    def __init__(self, next):
        #instance fields found by Java to Python Converter:
        self._next = None

        self._next = next

    class ClosureAnonymousInnerClass(Closure):
        def __init__(self):
            super().__init__(outerInstance, outerInstance)

        def doCall(self, it):
            return String.invokeMethod("valueOf", [getMetricsBaseName()]) + String.invokeMethod("valueOf", [it]) + ".error".invokeMethod("toString", [])

        def doCall(self):
            return doCall(None)


    class MetricSupplierAnonymousInnerClass(MetricRegistry.MetricSupplier):
        def newMetric(self):
            return Meter()


#JAVA TO PYTHON CONVERTER TODO TASK: Java annotations have no direct Python equivalent:
#ORIGINAL LINE: @Override @SuppressWarnings("CatchThrowable") public List<?> translateElement(@Nonnull String stageName, @Nonnull Closure<List<?>> stageCode, @Nullable Object element, @Nullable C context)
    def translateElement(self, stageName, stageCode, element, context):
        try:
#JAVA TO PYTHON CONVERTER TODO TASK: The following line could not be converted:
            return ((List<?>)(next.invokeMethod("translateElement", new Object[]{stageName, stageCode, element, context})));
        except Throwable as e:
#JAVA TO PYTHON CONVERTER TODO TASK: The following line could not be converted:
            return ((List<?>)(Collections.invokeMethod("emptyList", new Object[0])));


